/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RasterDataType } from './RasterDataType';
import {
    RasterDataTypeFromJSON,
    RasterDataTypeFromJSONTyped,
    RasterDataTypeToJSON,
    RasterDataTypeToJSONTyped,
} from './RasterDataType';

/**
 * 
 * @export
 * @interface MlModelMetadata
 */
export interface MlModelMetadata {
    /**
     * 
     * @type {string}
     * @memberof MlModelMetadata
     */
    fileName: string;
    /**
     * 
     * @type {RasterDataType}
     * @memberof MlModelMetadata
     */
    inputType: RasterDataType;
    /**
     * 
     * @type {number}
     * @memberof MlModelMetadata
     */
    numInputBands: number;
    /**
     * 
     * @type {RasterDataType}
     * @memberof MlModelMetadata
     */
    outputType: RasterDataType;
}



/**
 * Check if a given object implements the MlModelMetadata interface.
 */
export function instanceOfMlModelMetadata(value: object): value is MlModelMetadata {
    if (!('fileName' in value) || value['fileName'] === undefined) return false;
    if (!('inputType' in value) || value['inputType'] === undefined) return false;
    if (!('numInputBands' in value) || value['numInputBands'] === undefined) return false;
    if (!('outputType' in value) || value['outputType'] === undefined) return false;
    return true;
}

export function MlModelMetadataFromJSON(json: any): MlModelMetadata {
    return MlModelMetadataFromJSONTyped(json, false);
}

export function MlModelMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): MlModelMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'fileName': json['fileName'],
        'inputType': RasterDataTypeFromJSON(json['inputType']),
        'numInputBands': json['numInputBands'],
        'outputType': RasterDataTypeFromJSON(json['outputType']),
    };
}

export function MlModelMetadataToJSON(json: any): MlModelMetadata {
    return MlModelMetadataToJSONTyped(json, false);
}

export function MlModelMetadataToJSONTyped(value?: MlModelMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fileName': value['fileName'],
        'inputType': RasterDataTypeToJSON(value['inputType']),
        'numInputBands': value['numInputBands'],
        'outputType': RasterDataTypeToJSON(value['outputType']),
    };
}

